void swap(int* arr1 ,int* arr2){
    int t = *arr1;
    *arr1 = *arr2;
    *arr2 = t;
}
int partition(int* arr,int l,int h){
    int i = l - 1;
    int pivat = arr[h];
    for(int j = l;j <= h;j++){
        if(arr[j] < pivat){
            i++;
            swap(&arr[i],&arr[j]);
        }
    }
    swap(&arr[i+1],&arr[h]);
    return (i+1);
}
void quickSort(int* arr,int l,int h){
    if(l < h){
      int pi = partition(arr,l,h);
      //low partition
      quickSort(arr,l,pi-1);
      //high partition
      quickSort(arr,pi+1,h);  
    }
}

int binarySearch(int* arr,int l,int h,int x){
    if(l <= h){
        int mid = l + (h - l)/2;

        if(arr[mid] == x){
            return arr[mid];
        }else if(arr[mid] > x){
            return binarySearch(arr,l,mid - 1,x);
        }else if(arr[mid] < x){
            return binarySearch(arr,mid + 1,h,x);
        }
    }
    return -1;
}